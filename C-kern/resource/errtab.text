#
# printf based error strings for logging
#
# Format description:
# 1. Comments
#    Use '#' to mark the begin of comment until end of line
# 2. Resource Header
#    Every file must begin with the header
#    <textresource version='3'>
#    Every textresource section must end with
#    </textresource>
#    This ensures that later version upgrades can be mixed together with older versions
#    in the same file. This makes integration of changes possible in a successive way.
# 3. Declaration of a Textresource
#    A textresource is declared as a name and no parameters (table mode).
# 4. Textresource Content
#    The content of a textresource is described in a language specific way.
#    4.1 First comes the language designator, e.g "de:" or "en:".
#    4.2 Then the language specific text strings enclosed in "" are expected.
#        If one line is not enough you can use more than one line but always begin the line with a "string".
#    4.3 If more than one language is needed repeat steps 4.1 & 4.2.
#        For example:
#        EINVAL
#        de: "Ungültiges Argument"
#        en: "Invalid argument"
# 5. Textresource Content 2
#    The content of a can also be a reference to another textresource
#    5.1 For example EINVAL2 uses the same definition as EINVAL:
#        EINVAL
#        de: "Unbekannter Fehler"
#        en: "Unknown error"
#
#        EINVAL2 -> EINVAL
#

<textresource version='3'>

<outconfig type=C-table>
   <tablename strdata="static uint8_t s_errtab_strdata" stroffset="static uint16_t s_errtab_stroffset"/>
   <generate  source="C-kern/resource/generated/errtab"/>
   <languages>de, en</languages>
</outconfig>

### START: GENERATED BY GENERRTAB ###
EINVAL
de: "Ungültiges Argument"
en: "Invalid argument"

133
de: "Unbekannter Fehler"
en: "Unknown error"

134 -> 133

### END: GENERATED BY GENERRTAB ###

</textresource>
