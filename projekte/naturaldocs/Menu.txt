Format: 1.5


# You can add a title and sub-title to your menu like this:
# Title: [project name]
# SubTitle: [subtitle]

# You can add a footer to your documentation like this:
# Footer: [text]
# If you want to add a copyright notice, this would be the place to do it.

# You can add a timestamp to your documentation like one of these:
# Timestamp: Generated on month day, year
# Timestamp: Updated mm/dd/yyyy
# Timestamp: Last updated mon day
#
#   m     - One or two digit month.  January is "1"
#   mm    - Always two digit month.  January is "01"
#   mon   - Short month word.  January is "Jan"
#   month - Long month word.  January is "January"
#   d     - One or two digit day.  1 is "1"
#   dd    - Always two digit day.  1 is "01"
#   day   - Day with letter extension.  1 is "1st"
#   yy    - Two digit year.  2006 is "06"
#   yyyy  - Four digit year.  2006 is "2006"
#   year  - Four digit year.  2006 is "2006"


# --------------------------------------------------------------------------
# 
# Cut and paste the lines below to change the order in which your files
# appear on the menu.  Don't worry about adding or removing files, Natural
# Docs will take care of that.
# 
# You can further organize the menu by grouping the entries.  Add a
# "Group: [name] {" line to start a group, and add a "}" to end it.
# 
# You can add text and web links to the menu by adding "Text: [text]" and
# "Link: [name] ([URL])" lines, respectively.
# 
# The formatting and comments are auto-generated, so don't worry about
# neatness when editing the file.  Natural Docs will clean it up the next
# time it is run.  When working with groups, just deal with the braces and
# forget about the indentation and comments.
# 
# --------------------------------------------------------------------------


File: Konfiguration  (konfig.h)
File: Readme  (README.txt)

Group: Api  {

   File: errlog.h  (api/errlog.h)
   File: generic/integer.h  (api/generic/integer.h)
   File: Log API  (api/umgebung/log.h)
   File: Umgebung Interface  (api/umgebung.h)
   File: VirtualMemory  (api/os/virtmemory.h)
   }  # Group: Api

Group: Coding-Conventions  {

   File: free objects  (resource/coding-conventions/free_objects.txt)
   File: function parameter types  (resource/coding-conventions/function_parameter_type.txt)
   }  # Group: Coding-Conventions

Group: Implementation  {

   File: Umgebung Implementation  (umgebung/init_process.c)
   File: VirtualMemory Implementation  (os/Linux/virtmemory.c)
   }  # Group: Implementation

Group: Index  {

   Index: Everything
   Class Index: Classes
   Constant Index: Constants
   File Index: Files
   Function Index: Functions
   Macro Index: Macros
   Type Index: Types
   Variable Index: Variables
   }  # Group: Index

